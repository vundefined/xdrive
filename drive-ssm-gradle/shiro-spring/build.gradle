plugins {
    id 'java-library'
}

group 'org.apache.shiro'
version '0.0.1'

compileJava.options.encoding('UTF-8')
compileTestJava.options.encoding('UTF-8')
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

ext{
    springVersion = '6.0.5'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':shiro-cache')
    implementation project(':shiro-config')
    implementation project(':shiro-core')
    implementation project(':shiro-event')
    implementation project(':shiro-lang')
    implementation project(':shiro-web')

    implementation("org.springframework:spring-aop:${springVersion}"){transitive(false)}
    implementation("org.springframework:spring-beans:${springVersion}"){transitive(false)}
    implementation("org.springframework:spring-context:${springVersion}"){transitive(false)}
    implementation("org.springframework:spring-context-support:${springVersion}"){transitive(false)}
    implementation("org.springframework:spring-core:${springVersion}"){transitive(false)}
    implementation("org.springframework:spring-expression:${springVersion}"){transitive(false)}
    implementation("org.springframework:spring-jcl:${springVersion}"){transitive(false)}
    implementation("org.springframework:spring-web:${springVersion}"){transitive(false)}
    implementation("org.springframework:spring-webmvc:${springVersion}"){transitive(false)}
    implementation("org.springframework:spring-jdbc:${springVersion}"){transitive(false)}
    implementation("org.springframework:spring-tx:${springVersion}"){transitive(false)}
    implementation("org.springframework:spring-oxm:${springVersion}"){transitive(false)}
    implementation('org.springframework:spring-remoting:2.0.8'){transitive(false)}

    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.0'

    implementation('org.slf4j:slf4j-api:2.0.0'){transitive(false)}
    implementation('ch.qos.logback:logback-core:1.4.0'){transitive(false)}
    implementation('ch.qos.logback:logback-classic:1.4.0'){transitive(false)}

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}
